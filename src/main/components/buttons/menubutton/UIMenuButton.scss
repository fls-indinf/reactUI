@import '../../../../frontmask/scssmixin/buttonColors.scss';

/// background and border-color set because children need to inherit
/// Inherit height and width from parent who has set it by the layout
.rc-popupmenubutton {
    background: var(--btnDefaultBgd);
    border-color: var(--btnDefaultBgd);
    height: inherit;
    width: inherit;
    border-radius: 3px;
    &:hover {
        .p-splitbutton-defaultbutton, .p-splitbutton-menubutton {
            background: inherit;
            border-color: inherit;
            color: inherit;
        }
    }
    /// When either of the children is focused, display a blue shadow to show the button is focused
    &:focus-within {
        box-shadow: 0 0 0 0.2rem #8dcdff;
        -webkit-box-shadow: 0 0 0 0.2rem #8dcdff;
    }
}

.p-splitbutton-defaultbutton, .p-splitbutton-menubutton {
    background: inherit;
    border-color: inherit;
    color: inherit;
    /// Unset focus shadow because not the whole button is focused but only the one button of splitbutton
    &:focus {
        box-shadow: unset;
        -webkit-box-shadow: unset;
    }

    @include btnHover;
}



.p-splitbutton {
    --menuBtnJustify: center;
    --menuBtnAlign: center;
    --menuBtnPadding: var(--btnPTB) 0px var(--btnPTB) var(--btnPLR);
}

.p-splitbutton-defaultbutton {
    justify-content: var(--menuBtnJustify);
    align-items: var(--menuBtnAlign);
    padding: var(--menuBtnPadding);
}

/// Fixed width for menubutton part of splitbutton
.p-button.p-splitbutton-menubutton {
    width: var(--menuBtnIconWidth);
    padding: var(--btnPTB) var(--btnPLR) var(--btnPTB) 0px;
}